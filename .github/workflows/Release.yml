name: Release

on:
  workflow_dispatch:

env:
  GITHUB_ACTIONS: true
  DEVELOPER_DIR: /Applications/Xcode_14.2.app/Contents/Developer

jobs:
  setup:
    runs-on: ubuntu-22.04
    outputs:
      DATE: ${{ steps.get_date.outputs.DATE }}
    steps:
      - name: Get current date
        id: get_date
        run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT



  windows-arm:
    strategy:
      matrix:
        python-version: ["3.13"]

    runs-on: windows-11-arm
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: pdm-project/setup-pdm@v3
        name: Setup PDM
        with:
          python-version: ${{ matrix.python-version }}
          architecture: arm64
          version: 2.11.1
          prerelease: false
          enable-pep582: false
          allow-python-prereleases: false
          update-python: true

      - name: Check Python version
        run: |
          python --version
          
      - name: Install VulkanSDK (ARM64)
        run: |
          $ErrorActionPreference = 'Stop'
          $VULKAN_VERSION = "1.3.280.0"
          $VULKAN_URL = "https://sdk.lunarg.com/sdk/download/$VULKAN_VERSION/windows/VulkanSDK-$VULKAN_VERSION-Installer.exe?Human=true"
          $VULKAN_INSTALLER = "$env:RUNNER_TEMP\VulkanSDK-Installer.exe"
          Invoke-WebRequest -Uri $VULKAN_URL -OutFile $VULKAN_INSTALLER
          Start-Process -FilePath $VULKAN_INSTALLER -ArgumentList '/S','/ARM64' -Wait
          $VULKAN_SDK_PATH = "C:\VulkanSDK\$VULKAN_VERSION"
          echo "VULKAN_SDK=$VULKAN_SDK_PATH" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "PATH=$VULKAN_SDK_PATH\Bin;$env:PATH" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Build
        run: |
          $env:CMAKE_FLAGS="-DPY_VERSION=${{ matrix.python-version }}"
          cd src
          mkdir build && cd build
          cmake -DCMAKE_POLICY_VERSION_MINIMUM=3.5 -DCMAKE_CXX_FLAGS="-frtti -fexceptions" ..
          ENABLE_OPT=0 cmake --build . --config Release -j 4

      - name: pre build wheel
        run: |
          echo F | xcopy .\src\build\Release\upscale_ncnn_vulkan_wrapper.*.pyd .\src\upscale_ncnn_py

      - name: build python 3.13 wheel
        if: matrix.python-version == '3.13'
        run: pdm build --no-sdist --config-setting="--python-tag=cp313" --config-setting="--plat-name=win_amd64"

      - name: upload
        uses: actions/upload-artifact@v4
        with:
          path: dist
          name: windows-${{ matrix.python-version }}


